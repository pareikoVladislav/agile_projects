name: Django Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 2
      matrix:
        python-version: [ "3.12" ]

    services:
      mysql:
        image: mysql:latest
        ports:
          - 3306:3306
        env:
          MYSQL_DATABASE: ${{ secrets.DB_NAME }}
          MYSQL_ROOT_PASSWORD: ${{ secrets.DB_PASSWORD }}
          MYSQL_USER: ${{ secrets.DB_USER }}
          MYSQL_PASSWORD: ${{ secrets.DB_PASSWORD }}
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          export PATH="$HOME/.local/bin:$PATH"

      - name: Create .env file
        run: |
          echo 'SECRET_KEY=${{ secrets.SECRET_KEY }}' >> .env
          echo 'ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }}' >> .env
          echo 'DB_HOST=${{ secrets.DB_HOST }}' >> .env
          echo 'DB_NAME=${{ secrets.DB_NAME }}' >> .env
          echo 'DB_PASSWORD=${{ secrets.DB_PASSWORD }}' >> .env
          echo 'DB_PORT=${{ secrets.DB_PORT }}' >> .env
          echo 'DB_USER=${{ secrets.DB_USER }}' >> .env
          echo 'DEBUG=${{ secrets.DEBUG }}' >> .env
          echo 'MYSQL=${{ secrets.MYSQL }}' >> .env

      - name: Wait for MySQL
        run: |
          echo "Waiting for MySQL to be ready..."
          for i in {1..30}; do
            if mysqladmin ping -h"${{ secrets.DB_HOST }}" -u"${{ secrets.DB_USER }}" -p'${{ secrets.DB_PASSWORD }}' --silent; then
              echo "MySQL is up!"
              break
            fi
            echo "Waiting for MySQL... ($i/30)"
            sleep 10
          done
          mysqladmin ping -h"${{ secrets.DB_HOST }}" -u"${{ secrets.DB_USER }}" -p'${{ secrets.DB_PASSWORD }}' --verbose

      - name: Install dependencies with Poetry
        run: |
          poetry install -v

      - name: Run tests with Tox
        run: |
          poetry run tox

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: htmlcov

      - name: Upload Tox Logs
        uses: actions/upload-artifact@v3
        with:
          name: tox-logs
          path: tox_output.log
