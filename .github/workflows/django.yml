name: Django CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: ["3.10"]

    services:
      mysql:
        image: mysql:latest
        ports:
          - 3306:3306
        env:
          MYSQL_DATABASE: ${{ secrets.DB_NAME }}
          MYSQL_ROOT_PASSWORD: ${{ secrets.DB_PASSWORD }}
          MYSQL_USER: ${{ secrets.DB_USER }}
          MYSQL_PASSWORD: ${{ secrets.DB_PASSWORD }}
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set environment variables
      run: |
        echo 'SECRET_KEY=${{ secrets.SECRET_KEY }}' >> $GITHUB_ENV
        echo 'ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }}' >> $GITHUB_ENV
        echo 'DB_HOST=${{ secrets.DB_HOST }}' >> $GITHUB_ENV
        echo 'DB_NAME=${{ secrets.DB_NAME }}' >> $GITHUB_ENV
        echo 'DB_PASSWORD=${{ secrets.DB_PASSWORD }}' >> $GITHUB_ENV
        echo 'DB_PORT=${{ secrets.DB_PORT }}' >> $GITHUB_ENV
        echo 'DB_USER=${{ secrets.DB_USER }}' >> $GITHUB_ENV
        echo 'DEBUG=${{ secrets.DEBUG }}' >> $GITHUB_ENV
        echo 'MYSQL=${{ secrets.MYSQL }}' >> $GITHUB_ENV

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Grant MySQL User Privileges
      run: |
        echo "Granting all privileges to the user ${DB_USER}..."
        mysql -h"${{ secrets.DB_HOST }}" -uroot -p'${{ secrets.DB_PASSWORD }}' -e "CREATE USER IF NOT EXISTS '${DB_USER}'@'%' IDENTIFIED BY '${DB_PASSWORD}';"
        mysql -h"${{ secrets.DB_HOST }}" -uroot -p'${{ secrets.DB_PASSWORD }}' -e "GRANT ALL PRIVILEGES ON *.* TO '${DB_USER}'@'%'; FLUSH PRIVILEGES;"

    - name: Wait for MySQL
      run: |
        echo "Waiting for MySQL to be ready..."
        for i in {1..30}; do
          if mysqladmin ping -h"${{ secrets.DB_HOST }}" -u"${{ secrets.DB_USER }}" -p'${{ secrets.DB_PASSWORD }}' --silent; then
            echo "MySQL is up!"
            break
          fi
          echo "Waiting for MySQL... ($i/30)"
          sleep 10
        done
        mysqladmin ping -h"${{ secrets.DB_HOST }}" -u"${{ secrets.DB_USER }}" -p'${{ secrets.DB_PASSWORD }}' --verbose


    - name: Run Migrations
      run: |
        python manage.py migrate

    - name: Run Tests
      run: |
        python manage.py test
